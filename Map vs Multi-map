Map 
#include <bits/stdc++.h>
using namespace std;

int main() {
    vector<string> fruits = {"apple", "banana", "apple", "orange", "banana", "banana"};

    // Count frequency
    map<string, int> mp;
    for (auto &it : fruits) mp[it]++;

    // Move data to a vector for sorting
    vector<pair<int, string>> sorted_fruits;
    for (auto &it : mp) {
        sorted_fruits.push_back({it.second, it.first});
    }

    // Sort based on frequency (descending order)
    sort(sorted_fruits.rbegin(), sorted_fruits.rend());

    // Print results
    for (auto &it : sorted_fruits) {
        cout << it.second << " - " << it.first << endl;
    }

    return 0;
}

Multimap 

#include <bits/stdc++.h>
using namespace std;

int main() {
    vector<string> fruits = {"apple", "banana", "apple", "orange", "banana", "banana"};

    // Step 1: Count frequencies
    map<string, int> mp;
    for (auto &it : fruits) mp[it]++;

    // Step 2: Use multimap to store frequency as key (auto-sorts by key)
    multimap<int, string, greater<int>> sorted_mp;
    for (auto &it : mp) {
        sorted_mp.insert({it.second, it.first});
    }

    // Step 3: Print sorted output
    for (auto &it : sorted_mp) {
        cout << it.second << " - " << it.first << endl;
    }

    return 0;
}
